<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="109" failed="0" total="170" passed="61">
  <reporter-output>
  </reporter-output>
  <suite name="BroadleafCommerce Test Suite" duration-ms="8514" started-at="2019-09-04T21:37:13Z" finished-at="2019-09-04T21:37:22Z">
    <groups>
      <group name="createOrder">
        <method signature="OrderDaoTest.createOrder(org.broadleafcommerce.order.domain.Order)[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="createOrder" class="org.broadleafcommerce.test.integration.OrderDaoTest"/>
      </group> <!-- createOrder -->
      <group name="createCustomers">
        <method signature="CustomerTest.createCustomer(org.broadleafcommerce.profile.domain.Customer)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="createCustomer" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group> <!-- createCustomers -->
      <group name="createCountry">
        <method signature="AddressTest.createCountry()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="createCountry" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group> <!-- createCountry -->
      <group name="testAdminRoleSave">
        <method signature="AdminRoleTest.testAdminRoleSave(org.broadleafcommerce.security.domain.AdminRole)[pri:0, instance:org.broadleafcommerce.security.test.AdminRoleTest@78b1cc93]" name="testAdminRoleSave" class="org.broadleafcommerce.security.test.AdminRoleTest"/>
      </group> <!-- testAdminRoleSave -->
      <group name="testOfferNotStackableItemOffers">
        <method signature="OfferTest.testOfferNotStackableItemOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferNotStackableItemOffers" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferNotStackableItemOffers -->
      <group name="testCustomerAssociatedOffers2">
        <method signature="OfferTest.testCustomerAssociatedOffers2()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testCustomerAssociatedOffers2" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testCustomerAssociatedOffers2 -->
      <group name="testReadProductsWithCrossSaleValues">
        <method signature="ProductDaoTest.testReadProductsWithCrossSaleValues(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="testReadProductsWithCrossSaleValues" class="org.broadleafcommerce.test.integration.ProductDaoTest"/>
      </group> <!-- testReadProductsWithCrossSaleValues -->
      <group name="findIds">
        <method signature="IdGenerationTest.findIds()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="findIds" class="org.broadleafcommerce.profile.test.IdGenerationTest"/>
      </group> <!-- findIds -->
      <group name="testCreatePaymentInfo">
        <method signature="PaymentInfoServiceTest.createTestPaymentInfo()[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="createTestPaymentInfo" class="org.broadleafcommerce.test.integration.PaymentInfoServiceTest"/>
      </group> <!-- testCreatePaymentInfo -->
      <group name="testOfferNotCombinableOrderOffers">
        <method signature="OfferTest.testOfferNotCombinableOrderOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferNotCombinableOrderOffers" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferNotCombinableOrderOffers -->
      <group name="createState">
        <method signature="AddressTest.createState()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="createState" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group> <!-- createState -->
      <group name="testOfferLowerSalePriceWithNotCombinableOffer2">
        <method signature="OfferTest.testOfferLowerSalePriceWithNotCombinableOffer2()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferLowerSalePriceWithNotCombinableOffer2" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferLowerSalePriceWithNotCombinableOffer2 -->
      <group name="readFulfillmentGroupsForId">
        <method signature="FulfillmentGroupDaoTest.readFulfillmentGroupsForId()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="readFulfillmentGroupsForId" class="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest"/>
      </group> <!-- readFulfillmentGroupsForId -->
      <group name="testCustomerOffers">
        <method signature="OfferTest.testCustomerOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testCustomerOffers" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testCustomerOffers -->
      <group name="testReadAllOffers">
        <method signature="OfferTest.testReadAllOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testReadAllOffers" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testReadAllOffers -->
      <group name="createSku">
        <method signature="SkuDaoTest.createSku(org.broadleafcommerce.catalog.domain.Sku)[pri:0, instance:org.broadleafcommerce.test.integration.SkuDaoTest@55a1c291]" name="createSku" class="org.broadleafcommerce.test.integration.SkuDaoTest"/>
      </group> <!-- createSku -->
      <group name="findStates">
        <method signature="AddressTest.findStates()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="findStates" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group> <!-- findStates -->
      <group name="removeBundleFromOrder">
        <method signature="OrderTest.removeBundleFromOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="removeBundleFromOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- removeBundleFromOrder -->
      <group name="testOfferLowerSalePriceWithNotCombinableOffer">
        <method signature="OfferTest.testOfferLowerSalePriceWithNotCombinableOffer()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferLowerSalePriceWithNotCombinableOffer" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferLowerSalePriceWithNotCombinableOffer -->
      <group name="testOrderWithAllCombinableOffers_Order_Item_Fulfillment">
        <method signature="OfferTest.testOrderWithAllCombinableOffers_Order_Item_Fulfillment()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrderWithAllCombinableOffers_Order_Item_Fulfillment" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOrderWithAllCombinableOffers_Order_Item_Fulfillment -->
      <group name="testOfferGreaterDiscountSort">
        <method signature="OfferTest.testOfferGreaterDiscountSort()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferGreaterDiscountSort" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferGreaterDiscountSort -->
      <group name="testOrderWithCombinable_ItemAndShipping_NonCombinable_Order_Apply_Percent">
        <method signature="OfferTest.testOrderWithCombinable_ItemAndShipping_NonCombinable_Order_Apply_Percent()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrderWithCombinable_ItemAndShipping_NonCombinable_Order_Apply_Percent" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOrderWithCombinable_ItemAndShipping_NonCombinable_Order_Apply_Percent -->
      <group name="readPaymentInfosByOrder">
        <method signature="PaymentInfoServiceTest.readPaymentInfoByOrder()[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="readPaymentInfoByOrder" class="org.broadleafcommerce.test.integration.PaymentInfoServiceTest"/>
      </group> <!-- readPaymentInfosByOrder -->
      <group name="readFulfillmentGroupItemsForFulfillmentGroup">
        <method signature="FulfillmentGroupItemDaoTest.readFulfillmentGroupItemsForFulfillmentGroup()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest@25a65b77]" name="readFulfillmentGroupItemsForFulfillmentGroup" class="org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest"/>
      </group> <!-- readFulfillmentGroupItemsForFulfillmentGroup -->
      <group name="readFulfillmentGroupItemsById">
        <method signature="FulfillmentGroupItemDaoTest.readFulfillmentGroupItemsById()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest@25a65b77]" name="readFulfillmentGroupItemsById" class="org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest"/>
      </group> <!-- readFulfillmentGroupItemsById -->
      <group name="testOfferSortWhenOfferAppliedToMultipleQuantityItems">
        <method signature="OfferTest.testOfferSortWhenOfferAppliedToMultipleQuantityItems()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferSortWhenOfferAppliedToMultipleQuantityItems" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferSortWhenOfferAppliedToMultipleQuantityItems -->
      <group name="paginationObject">
        <method signature="PaginationCommandObjectTest.testDisplayList()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="testDisplayList" class="org.broadleafcommerce.layout.test.PaginationCommandObjectTest"/>
        <method signature="PaginationCommandObjectTest.testFullList()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="testFullList" class="org.broadleafcommerce.layout.test.PaginationCommandObjectTest"/>
        <method signature="PaginationCommandObjectTest.testIndices()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="testIndices" class="org.broadleafcommerce.layout.test.PaginationCommandObjectTest"/>
      </group> <!-- paginationObject -->
      <group name="testNamedOrderForCustomer">
        <method signature="OrderTest.testNamedOrderForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testNamedOrderForCustomer" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- testNamedOrderForCustomer -->
      <group name="testOfferLowerSalePriceWithNotCombinableOfferAndInformation">
        <method signature="OfferTest.testOfferLowerSalePriceWithNotCombinableOfferAndInformation()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferLowerSalePriceWithNotCombinableOfferAndInformation" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferLowerSalePriceWithNotCombinableOfferAndInformation -->
      <group name="addAnotherItemToOrder">
        <method signature="OrderTest.addAnotherItemToOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addAnotherItemToOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- addAnotherItemToOrder -->
      <group name="viewExistingCustomerPhoneFromController">
        <method signature="CustomerPhoneControllerTest.viewExistingCustomerPhoneFromController()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="viewExistingCustomerPhoneFromController" class="org.broadleafcommerce.profile.test.CustomerPhoneControllerTest"/>
      </group> <!-- viewExistingCustomerPhoneFromController -->
      <group name="findIdsForBeginEndSequence">
        <method signature="IdGenerationTest.findIdsForBeginEndSequence()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="findIdsForBeginEndSequence" class="org.broadleafcommerce.profile.test.IdGenerationTest"/>
      </group> <!-- findIdsForBeginEndSequence -->
      <group name="findStateByAbbreviation">
        <method signature="AddressTest.findStateByAbbreviation()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="findStateByAbbreviation" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group> <!-- findStateByAbbreviation -->
      <group name="testFulfillmentGroupOffers">
        <method signature="OfferTest.testFulfillmentGroupOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testFulfillmentGroupOffers" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testFulfillmentGroupOffers -->
      <group name="testGlobalOffers">
        <method signature="OfferTest.testGlobalOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testGlobalOffers" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testGlobalOffers -->
      <group name="deleteGiftWrapOrderItemsById">
        <method signature="OrderItemDaoTest.deleteGiftWrapOrderItemsById()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="deleteGiftWrapOrderItemsById" class="org.broadleafcommerce.test.integration.OrderItemDaoTest"/>
      </group> <!-- deleteGiftWrapOrderItemsById -->
      <group name="findFulFillmentGroupForOrderFirst">
        <method signature="OrderTest.findFillmentGroupForOrderFirst()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findFillmentGroupForOrderFirst" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- findFulFillmentGroupForOrderFirst -->
      <group name="addBundleToOrder">
        <method signature="OrderTest.addBundleToOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addBundleToOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- addBundleToOrder -->
      <group name="deleteOrderForCustomer">
        <method signature="OrderDaoTest.deleteOrderForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="deleteOrderForCustomer" class="org.broadleafcommerce.test.integration.OrderDaoTest"/>
      </group> <!-- deleteOrderForCustomer -->
      <group name="readCustomer2">
        <method signature="CustomerTest.readCustomersByUsername2()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="readCustomersByUsername2" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group> <!-- readCustomer2 -->
      <group name="readCustomer1">
        <method signature="CustomerTest.readCustomersByUsername1()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="readCustomersByUsername1" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group> <!-- readCustomer1 -->
      <group name="offerCreateSku2">
        <method signature="OfferTest.createSku2(org.broadleafcommerce.catalog.domain.Sku)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="createSku2" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- offerCreateSku2 -->
      <group name="findCountryByShortName">
        <method signature="AddressTest.findCountryByShortName()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="findCountryByShortName" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group> <!-- findCountryByShortName -->
      <group name="offerCreateSku1">
        <method signature="OfferTest.createSku1(org.broadleafcommerce.catalog.domain.Sku)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="createSku1" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- offerCreateSku1 -->
      <group name="findDefaultFulFillmentGroupForOrder">
        <method signature="OrderTest.findDefaultFillmentGroupForOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findDefaultFillmentGroupForOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- findDefaultFulFillmentGroupForOrder -->
      <group name="addItemToFulfillmentGroupSecond">
        <method signature="OrderTest.addItemToFulfillmentgroupSecond()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addItemToFulfillmentgroupSecond" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- addItemToFulfillmentGroupSecond -->
      <group name="testOfferNotCombinableItemOffers">
        <method signature="OfferTest.testOfferNotCombinableItemOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferNotCombinableItemOffers" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferNotCombinableItemOffers -->
      <group name="testOfferLowerSalePrice">
        <method signature="OfferTest.testOfferLowerSalePrice()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferLowerSalePrice" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferLowerSalePrice -->
      <group name="testOfferCodeDao">
        <method signature="OfferTest.testOfferCodeDao()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferCodeDao" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferCodeDao -->
      <group name="testOfferNotCombinableOrderOffersWithItemOffer">
        <method signature="OfferTest.testOfferNotCombinableOrderOffersWithItemOffer()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferNotCombinableOrderOffersWithItemOffer" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferNotCombinableOrderOffersWithItemOffer -->
      <group name="viewCustomerPhoneFromController">
        <method signature="CustomerPhoneControllerTest.viewCustomerPhoneFromController()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="viewCustomerPhoneFromController" class="org.broadleafcommerce.profile.test.CustomerPhoneControllerTest"/>
      </group> <!-- viewCustomerPhoneFromController -->
      <group name="createPhone">
        <method signature="PhoneTest.createPhone(org.broadleafcommerce.profile.domain.Phone)[pri:0, instance:org.broadleafcommerce.profile.test.PhoneTest@4d826d77]" name="createPhone" class="org.broadleafcommerce.profile.test.PhoneTest"/>
      </group> <!-- createPhone -->
      <group name="testOfferNotStackableOrderOffers">
        <method signature="OfferTest.testOfferNotStackableOrderOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferNotStackableOrderOffers" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferNotStackableOrderOffers -->
      <group name="applyOffersToOrder">
        <method signature="OfferServiceTest.applyOffersToOrder(java.util.List)[pri:0, instance:org.broadleafcommerce.test.integration.OfferServiceTest@52aa2946]" name="applyOffersToOrder" class="org.broadleafcommerce.test.integration.OfferServiceTest"/>
      </group> <!-- applyOffersToOrder -->
      <group name="testReadOrdersForCustomer">
        <method signature="OrderTest.testReadOrdersForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testReadOrdersForCustomer" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- testReadOrdersForCustomer -->
      <group name="testOrderProperties">
        <method signature="OrderTest.testOrderProperties()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testOrderProperties" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- testOrderProperties -->
      <group name="createPaymentInfo">
        <method signature="PaymentInfoServiceTest.createPaymentInfo(org.broadleafcommerce.payment.domain.PaymentInfo)[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="createPaymentInfo" class="org.broadleafcommerce.test.integration.PaymentInfoServiceTest"/>
      </group> <!-- createPaymentInfo -->
      <group name="viewRegisterCustomerFromController">
        <method signature="RegisterCustomerControllerTest.viewRegisterCustomerFromController()[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="viewRegisterCustomerFromController" class="org.broadleafcommerce.profile.test.RegisterCustomerControllerTest"/>
      </group> <!-- viewRegisterCustomerFromController -->
      <group name="readCustomer">
        <method signature="CustomerTest.readCustomersById()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="readCustomersById" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group> <!-- readCustomer -->
      <group name="testReadProductsWithUpSaleValues">
        <method signature="ProductDaoTest.testReadProductsWithUpSaleValues(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="testReadProductsWithUpSaleValues" class="org.broadleafcommerce.test.integration.ProductDaoTest"/>
      </group> <!-- testReadProductsWithUpSaleValues -->
      <group name="findNamedOrderForCustomer">
        <method signature="OrderTest.findNamedOrderForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findNamedOrderForCustomer" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- findNamedOrderForCustomer -->
      <group name="updateItemsInOrder">
        <method signature="OrderTest.updateItemsInOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="updateItemsInOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- updateItemsInOrder -->
      <group name="getItemsForOrder">
        <method signature="OrderTest.getItemsForOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="getItemsForOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- getItemsForOrder -->
      <group name="readPaymentInfoById">
        <method signature="PaymentInfoServiceTest.readPaymentInfoById()[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="readPaymentInfoById" class="org.broadleafcommerce.test.integration.PaymentInfoServiceTest"/>
      </group> <!-- readPaymentInfoById -->
      <group name="createCustomerAddress">
        <method signature="CustomerAddressTest.createCustomerAddress(org.broadleafcommerce.profile.domain.CustomerAddress)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerAddressTest@491666ad]" name="createCustomerAddress" class="org.broadleafcommerce.profile.test.CustomerAddressTest"/>
      </group> <!-- createCustomerAddress -->
      <group name="createDiscreteOrderItem">
        <method signature="OrderItemDaoTest.createDiscreteOrderItem(org.broadleafcommerce.order.domain.DiscreteOrderItem)[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="createDiscreteOrderItem" class="org.broadleafcommerce.test.integration.OrderItemDaoTest"/>
      </group> <!-- createDiscreteOrderItem -->
      <group name="createCustomerIdGeneration">
        <method signature="CustomerTest.createCustomerIdGeneration()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="createCustomerIdGeneration" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group> <!-- createCustomerIdGeneration -->
      <group name="offerUsedForPricing">
        <method signature="OfferTest.testOfferUsedForPricing()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferUsedForPricing" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- offerUsedForPricing -->
      <group name="testOfferSortWhenOfferAppliedToMultipleItems">
        <method signature="OfferTest.testOfferSortWhenOfferAppliedToMultipleItems()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferSortWhenOfferAppliedToMultipleItems" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferSortWhenOfferAppliedToMultipleItems -->
      <group name="createCustomerPhone">
        <method signature="CustomerPhoneTest.createCustomerPhone(org.broadleafcommerce.profile.domain.CustomerPhone)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneTest@5762806e]" name="createCustomerPhone" class="org.broadleafcommerce.profile.test.CustomerPhoneTest"/>
      </group> <!-- createCustomerPhone -->
      <group name="findCartForAnonymousCustomer">
        <method signature="OrderTest.findCartForAnonymousCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findCartForAnonymousCustomer" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- findCartForAnonymousCustomer -->
      <group name="createCartForCustomer">
        <method signature="OrderTest.createCartForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="createCartForCustomer" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- createCartForCustomer -->
      <group name="testPercentageOffOffer">
        <method signature="OfferTest.testPercentOffOfferWithScaleGreaterThanTwo()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testPercentOffOfferWithScaleGreaterThanTwo" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testPercentageOffOffer -->
      <group name="createIdForBeginEndSequence">
        <method signature="IdGenerationTest.createIdForBeginEndSequence()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="createIdForBeginEndSequence" class="org.broadleafcommerce.profile.test.IdGenerationTest"/>
      </group> <!-- createIdForBeginEndSequence -->
      <group name="testFulfillmentGroupOffers_MultipleNonCombinable_ApplyNonCombinable">
        <method signature="OfferTest.testFulfillmentGroupOffers_MultipleNonCombinable_ApplyNonCombinable()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testFulfillmentGroupOffers_MultipleNonCombinable_ApplyNonCombinable" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testFulfillmentGroupOffers_MultipleNonCombinable_ApplyNonCombinable -->
      <group name="removeItemFromOrder">
        <method signature="OrderTest.removeItemFromOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="removeItemFromOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- removeItemFromOrder -->
      <group name="readDefaultFulfillmentGroupForOrder">
        <method signature="FulfillmentGroupDaoTest.readDefaultFulfillmentGroupForOrder()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="readDefaultFulfillmentGroupForOrder" class="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest"/>
      </group> <!-- readDefaultFulfillmentGroupForOrder -->
      <group name="readSkuById">
        <method signature="SkuDaoTest.readSkuById()[pri:0, instance:org.broadleafcommerce.test.integration.SkuDaoTest@55a1c291]" name="readSkuById" class="org.broadleafcommerce.test.integration.SkuDaoTest"/>
      </group> <!-- readSkuById -->
      <group name="checkOrderItems">
        <method signature="OrderTest.checkOrderItems()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="checkOrderItems" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- checkOrderItems -->
      <group name="createCustomerFromController">
        <method signature="RegisterCustomerControllerTest.createCustomerFromController(org.broadleafcommerce.profile.web.form.RegisterCustomerForm)[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="createCustomerFromController" class="org.broadleafcommerce.profile.test.RegisterCustomerControllerTest"/>
      </group> <!-- createCustomerFromController -->
      <group name="removeItemFromOrderAfterDefaultFulfillmentGroup">
        <method signature="OrderTest.removeItemFromOrderAfterFulfillmentGroups()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="removeItemFromOrderAfterFulfillmentGroups" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- removeItemFromOrderAfterDefaultFulfillmentGroup -->
      <group name="changeCustomerPassword">
        <method signature="CustomerTest.changeCustomerPasswords()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="changeCustomerPasswords" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group> <!-- changeCustomerPassword -->
      <group name="createDefaultFulfillmentGroup">
        <method signature="FulfillmentGroupDaoTest.createDefaultFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="createDefaultFulfillmentGroup" class="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest"/>
      </group> <!-- createDefaultFulfillmentGroup -->
      <group name="testOrder_ApplyOrderAndItemOffer_KeepRetailShipping">
        <method signature="OfferTest.testOrder_ApplyOrderAndItemOffer_KeepRetailShipping()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrder_ApplyOrderAndItemOffer_KeepRetailShipping" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOrder_ApplyOrderAndItemOffer_KeepRetailShipping -->
      <group name="createProducts">
        <method signature="ProductDaoTest.createProducts(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createProducts" class="org.broadleafcommerce.test.integration.ProductDaoTest"/>
      </group> <!-- createProducts -->
      <group name="testOrderPaymentInfos">
        <method signature="OrderTest.testOrderPaymentInfos(org.broadleafcommerce.payment.domain.PaymentInfo)[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testOrderPaymentInfos" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- testOrderPaymentInfos -->
      <group name="createSkuAvailability">
        <method signature="SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="createSkuAvailability" class="org.broadleafcommerce.inventory.test.SkuAvailabilityTest"/>
      </group> <!-- createSkuAvailability -->
      <group name="testAdminPermissionSave">
        <method signature="AdminPermissionTest.testAdminPermissionSave(org.broadleafcommerce.security.domain.AdminPermission)[pri:0, instance:org.broadleafcommerce.security.test.AdminPermissionTest@1a84f40f]" name="testAdminPermissionSave" class="org.broadleafcommerce.security.test.AdminPermissionTest"/>
      </group> <!-- testAdminPermissionSave -->
      <group name="readCustomerAddress">
        <method signature="CustomerAddressTest.readCustomerAddressByUserId()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerAddressTest@491666ad]" name="readCustomerAddressByUserId" class="org.broadleafcommerce.profile.test.CustomerAddressTest"/>
      </group> <!-- readCustomerAddress -->
      <group name="testAddSkuToOrder">
        <method signature="OrderTest.testAddSkuToOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testAddSkuToOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- testAddSkuToOrder -->
      <group name="testShipping">
        <method signature="PricingTest.testShipping()[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="testShipping" class="org.broadleafcommerce.pricing.test.PricingTest"/>
      </group> <!-- testShipping -->
      <group name="createCrossSaleValues">
        <method signature="ProductDaoTest.createCrossSaleValues(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createCrossSaleValues" class="org.broadleafcommerce.test.integration.ProductDaoTest"/>
      </group> <!-- createCrossSaleValues -->
      <group name="readPhoneById">
        <method signature="PhoneTest.readPhoneById()[pri:0, instance:org.broadleafcommerce.profile.test.PhoneTest@4d826d77]" name="readPhoneById" class="org.broadleafcommerce.profile.test.PhoneTest"/>
      </group> <!-- readPhoneById -->
      <group name="testShippingInsert">
        <method signature="PricingTest.testShippingInsert(org.broadleafcommerce.pricing.domain.ShippingRate, org.broadleafcommerce.pricing.domain.ShippingRate)[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="testShippingInsert" class="org.broadleafcommerce.pricing.test.PricingTest"/>
      </group> <!-- testShippingInsert -->
      <group name="testOrder_ApplyOrderOffer_KeepRetailShipping">
        <method signature="OfferTest.testOrder_ApplyFulfillmentOffer_KeepRetailOrder()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrder_ApplyFulfillmentOffer_KeepRetailOrder" class="org.broadleafcommerce.offer.test.OfferTest"/>
        <method signature="OfferTest.testOrder_ApplyOrderOffer_KeepRetailShipping()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrder_ApplyOrderOffer_KeepRetailShipping" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOrder_ApplyOrderOffer_KeepRetailShipping -->
      <group name="createId">
        <method signature="IdGenerationTest.createId()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="createId" class="org.broadleafcommerce.profile.test.IdGenerationTest"/>
      </group> <!-- createId -->
      <group name="createUpSaleValues">
        <method signature="ProductDaoTest.createUpSaleValues(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createUpSaleValues" class="org.broadleafcommerce.test.integration.ProductDaoTest"/>
      </group> <!-- createUpSaleValues -->
      <group name="testCustomerAssociatedOffers">
        <method signature="OfferTest.testCustomerAssociatedOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testCustomerAssociatedOffers" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testCustomerAssociatedOffers -->
      <group name="readOrdersForCustomer">
        <method signature="OrderDaoTest.readOrdersForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="readOrdersForCustomer" class="org.broadleafcommerce.test.integration.OrderDaoTest"/>
      </group> <!-- readOrdersForCustomer -->
      <group name="findOrderByOrderNumber">
        <method signature="OrderTest.findOrderByOrderNumber()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findOrderByOrderNumber" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- findOrderByOrderNumber -->
      <group name="createFulfillmentGroupItem">
        <method signature="FulfillmentGroupItemDaoTest.createFulfillmentGroupItem()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest@25a65b77]" name="createFulfillmentGroupItem" class="org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest"/>
      </group> <!-- createFulfillmentGroupItem -->
      <group name="testOfferDelete">
        <method signature="OfferTest.testOfferDelete()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferDelete" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOfferDelete -->
      <group name="testFulfillmentGroupOffersNonCombinable">
        <method signature="OfferTest.testFulfillmentGroupOffersNonCombinable()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testFulfillmentGroupOffersNonCombinable" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testFulfillmentGroupOffersNonCombinable -->
      <group name="readCustomerPhone">
        <method signature="CustomerPhoneTest.readCustomerPhoneByUserId()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneTest@5762806e]" name="readCustomerPhoneByUserId" class="org.broadleafcommerce.profile.test.CustomerPhoneTest"/>
      </group> <!-- readCustomerPhone -->
      <group name="testFulfillmentGroupOffers_MultipleNonCombinable">
        <method signature="OfferTest.testFulfillmentGroupOffers_MultipleNonCombinable()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testFulfillmentGroupOffers_MultipleNonCombinable" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testFulfillmentGroupOffers_MultipleNonCombinable -->
      <group name="createFulfillmentGroup">
        <method signature="FulfillmentGroupDaoTest.createFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="createFulfillmentGroup" class="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest"/>
      </group> <!-- createFulfillmentGroup -->
      <group name="readGiftWrapOrderItemsById">
        <method signature="OrderItemDaoTest.readGiftWrapOrderItemsById()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="readGiftWrapOrderItemsById" class="org.broadleafcommerce.test.integration.OrderItemDaoTest"/>
      </group> <!-- readGiftWrapOrderItemsById -->
      <group name="testOrder_KeepRetailOrderAndItem_ApplyShippingOffer">
        <method signature="OfferTest.testOrder_KeepRetailOrderAndItem_ApplyShippingOffer()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrder_KeepRetailOrderAndItem_ApplyShippingOffer" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOrder_KeepRetailOrderAndItem_ApplyShippingOffer -->
      <group name="readOrderItemsById">
        <method signature="OrderItemDaoTest.readOrderItemsById()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="readOrderItemsById" class="org.broadleafcommerce.test.integration.OrderItemDaoTest"/>
      </group> <!-- readOrderItemsById -->
      <group name="readDefaultFulfillmentGroupForId">
        <method signature="FulfillmentGroupDaoTest.readDefaultFulfillmentGroupForId()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="readDefaultFulfillmentGroupForId" class="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest"/>
      </group> <!-- readDefaultFulfillmentGroupForId -->
      <group name="testSubmitOrder">
        <method signature="OrderTest.testSubmitOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testSubmitOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- testSubmitOrder -->
      <group name="createCustomerPhoneFromController">
        <method signature="CustomerPhoneControllerTest.createCustomerPhoneFromController(org.broadleafcommerce.profile.web.model.PhoneNameForm)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="createCustomerPhoneFromController" class="org.broadleafcommerce.profile.test.CustomerPhoneControllerTest"/>
      </group> <!-- createCustomerPhoneFromController -->
      <group name="readCustomerPhoneFromController">
        <method signature="CustomerPhoneControllerTest.readCustomerPhoneFromController()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="readCustomerPhoneFromController" class="org.broadleafcommerce.profile.test.CustomerPhoneControllerTest"/>
      </group> <!-- readCustomerPhoneFromController -->
      <group name="addItemToOrder">
        <method signature="OrderTest.addItemToOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addItemToOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- addItemToOrder -->
      <group name="addFulfillmentGroupToOrderFirst">
        <method signature="OrderTest.addFulfillmentGroupToOrderFirst(org.broadleafcommerce.order.domain.FulfillmentGroup)[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addFulfillmentGroupToOrderFirst" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- addFulfillmentGroupToOrderFirst -->
      <group name="findCountries">
        <method signature="AddressTest.findCountries()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="findCountries" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group> <!-- findCountries -->
      <group name="readOrderItemsByIdAfterGiftWrapDeletion">
        <method signature="OrderItemDaoTest.readOrderItemsByIdAfterGiftWrapDeletion()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="readOrderItemsByIdAfterGiftWrapDeletion" class="org.broadleafcommerce.test.integration.OrderItemDaoTest"/>
      </group> <!-- readOrderItemsByIdAfterGiftWrapDeletion -->
      <group name="readOrder">
        <method signature="OrderDaoTest.readOrderById()[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="readOrderById" class="org.broadleafcommerce.test.integration.OrderDaoTest"/>
      </group> <!-- readOrder -->
      <group name="addPaymentToOrder">
        <method signature="OrderTest.addPaymentToOrder(org.broadleafcommerce.payment.domain.PaymentInfo)[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addPaymentToOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- addPaymentToOrder -->
      <group name="testSetFeaturedProducts">
        <method signature="CategoryDaoTest.testSetFeaturedProducts(org.broadleafcommerce.catalog.domain.Category)[pri:0, instance:org.broadleafcommerce.test.integration.CategoryDaoTest@55ca8de8]" name="testSetFeaturedProducts" class="org.broadleafcommerce.test.integration.CategoryDaoTest"/>
      </group> <!-- testSetFeaturedProducts -->
      <group name="createGiftWrapOrderItem">
        <method signature="OrderItemDaoTest.createGiftWrapOrderItem(org.broadleafcommerce.order.domain.GiftWrapOrderItem)[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="createGiftWrapOrderItem" class="org.broadleafcommerce.test.integration.OrderItemDaoTest"/>
      </group> <!-- createGiftWrapOrderItem -->
      <group name="removeFulfillmentGroupFromOrder">
        <method signature="OrderTest.removeFulfillmentGroupFromOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="removeFulfillmentGroupFromOrder" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- removeFulfillmentGroupFromOrder -->
      <group name="makePhoneDefaultOnCustomerPhoneController">
        <method signature="CustomerPhoneControllerTest.makePhoneDefaultOnCustomerPhoneController()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="makePhoneDefaultOnCustomerPhoneController" class="org.broadleafcommerce.profile.test.CustomerPhoneControllerTest"/>
      </group> <!-- makePhoneDefaultOnCustomerPhoneController -->
      <group name="getOrdersForCustomer">
        <method signature="OrderTest.getOrdersForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="getOrdersForCustomer" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- getOrdersForCustomer -->
      <group name="findCurrentCartForCustomer">
        <method signature="OrderTest.findCurrentCartForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findCurrentCartForCustomer" class="org.broadleafcommerce.test.integration.OrderTest"/>
      </group> <!-- findCurrentCartForCustomer -->
      <group name="testAdminUserSave">
        <method signature="AdminUserTest.testAdminUserSave(org.broadleafcommerce.security.domain.AdminUser)[pri:0, instance:org.broadleafcommerce.security.test.AdminUserTest@1d548a08]" name="testAdminUserSave" class="org.broadleafcommerce.security.test.AdminUserTest"/>
      </group> <!-- testAdminUserSave -->
      <group name="testOrderWith_NoOrderItemOffers_WithFulfillmentOffers">
        <method signature="OfferTest.testOrderWith_NoOrderItemOffers_WithFulfillmentOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrderWith_NoOrderItemOffers_WithFulfillmentOffers" class="org.broadleafcommerce.offer.test.OfferTest"/>
      </group> <!-- testOrderWith_NoOrderItemOffers_WithFulfillmentOffers -->
      <group name="readFirstSku">
        <method signature="SkuDaoTest.readFirstSku()[pri:0, instance:org.broadleafcommerce.test.integration.SkuDaoTest@55a1c291]" name="readFirstSku" class="org.broadleafcommerce.test.integration.SkuDaoTest"/>
      </group> <!-- readFirstSku -->
    </groups>
    <test name="commerce-integrationtest" duration-ms="7000" started-at="2019-09-04T21:37:13Z" finished-at="2019-09-04T21:37:20Z">
      <class name="org.broadleafcommerce.test.integration.OrmTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.OrmTest@4034c28c]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.OrmTest@4034c28c]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.OrmTest@4034c28c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrmTest.testMappings()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testMappings()[pri:0, instance:org.broadleafcommerce.test.integration.OrmTest@4034c28c]" name="testMappings" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMappings -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.OrmTest@4034c28c]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.OrmTest@4034c28c]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.OrmTest@4034c28c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrmTest.testMappings()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.OrmTest@4034c28c]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.test.integration.OrmTest -->
      <class name="org.broadleafcommerce.profile.test.CustomerPhoneTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneTest@5762806e]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneTest@5762806e]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="createCustomerPhone(org.broadleafcommerce.profile.domain.CustomerPhone)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneTest@5762806e]" name="createCustomerPhone" duration-ms="0" depends-on-groups="readCustomer1" started-at="2019-09-04T16:37:20Z" data-provider="setupCustomerPhone" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerPhone -->
        <test-method status="SKIP" signature="readCustomerPhoneByUserId()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneTest@5762806e]" name="readCustomerPhoneByUserId" duration-ms="0" depends-on-groups="createCustomerPhone" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readCustomerPhoneByUserId -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneTest@5762806e]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneTest@5762806e]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.profile.test.CustomerPhoneTest -->
      <class name="org.broadleafcommerce.test.integration.MVELTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="testBasicMVELFunctions()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="testBasicMVELFunctions" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBasicMVELFunctions -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.MVELTest.testBasicMVELFunctions()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="testOfferAppliesToFulfillmentGroup()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="testOfferAppliesToFulfillmentGroup" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferAppliesToFulfillmentGroup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.MVELTest.testOfferAppliesToFulfillmentGroup()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testOfferAppliesToItemsInCategoryAndOrderValueGreaterThanFifty()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="testOfferAppliesToItemsInCategoryAndOrderValueGreaterThanFifty" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferAppliesToItemsInCategoryAndOrderValueGreaterThanFifty -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.MVELTest.testOfferAppliesToItemsInCategoryAndOrderValueGreaterThanFifty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="testOfferAppliesToSpecificItems()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="testOfferAppliesToSpecificItems" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferAppliesToSpecificItems -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.MVELTest.testOfferAppliesToSpecificItems()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.MVELTest@52e677af]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.test.integration.MVELTest -->
      <class name="org.broadleafcommerce.catalog.test.CatalogTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:19Z" finished-at="2019-09-04T16:37:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="6" started-at="2019-09-04T16:37:19Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:19Z" finished-at="2019-09-04T16:37:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.catalog.test.CatalogTest.testCatalog() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:19Z" finished-at="2019-09-04T16:37:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testCatalog()[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="testCatalog" duration-ms="148" started-at="2019-09-04T16:37:19Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCatalog -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="24" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.catalog.test.CatalogTest.testCatalog() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.catalog.test.CatalogTest.testSkus() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testSkus()[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="testSkus" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkus -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.catalog.test.CatalogTest.testSkus() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.broadleafcommerce.catalog.test.CatalogTest@1f1c7bf6]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.broadleafcommerce.catalog.test.CatalogTest -->
      <class name="org.broadleafcommerce.dependency.test.DependencyTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.dependency.test.DependencyTest@5ea434c8]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.dependency.test.DependencyTest@5ea434c8]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="7" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.dependency.test.DependencyTest@5ea434c8]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.dependency.test.DependencyTest@5ea434c8]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.dependency.test.DependencyTest.testDependencies() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testDependencies()[pri:0, instance:org.broadleafcommerce.dependency.test.DependencyTest@5ea434c8]" name="testDependencies" duration-ms="58" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDependencies -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.dependency.test.DependencyTest@5ea434c8]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.dependency.test.DependencyTest.testDependencies() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.dependency.test.DependencyTest@5ea434c8]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.broadleafcommerce.dependency.test.DependencyTest@5ea434c8]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.broadleafcommerce.dependency.test.DependencyTest -->
      <class name="org.broadleafcommerce.test.integration.CategoryDaoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.CategoryDaoTest@55ca8de8]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.CategoryDaoTest@55ca8de8]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="8" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.CategoryDaoTest@55ca8de8]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.CategoryDaoTest.testSetFeaturedProducts(org.broadleafcommerce.catalog.domain.Category)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.CategoryDaoTest@55ca8de8]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testSetFeaturedProducts(org.broadleafcommerce.catalog.domain.Category)[pri:0, instance:org.broadleafcommerce.test.integration.CategoryDaoTest@55ca8de8]" name="testSetFeaturedProducts" duration-ms="11" started-at="2019-09-04T16:37:20Z" data-provider="basicCategory" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.CategoryImpl@9e7e16ce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFeaturedProducts -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.CategoryDaoTest@55ca8de8]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.CategoryDaoTest.testSetFeaturedProducts(org.broadleafcommerce.catalog.domain.Category)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.CategoryDaoTest@55ca8de8]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.CategoryDaoTest@55ca8de8]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.test.integration.CategoryDaoTest -->
      <class name="org.broadleafcommerce.security.test.AdminRoleTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.security.test.AdminRoleTest@78b1cc93]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="8" started-at="2019-09-04T16:37:13Z" finished-at="2019-09-04T16:37:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.security.test.AdminRoleTest@78b1cc93]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="6079" started-at="2019-09-04T16:37:13Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.security.test.AdminRoleTest@78b1cc93]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="50" started-at="2019-09-04T16:37:19Z" finished-at="2019-09-04T16:37:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.security.test.AdminRoleTest.testAdminRoleSave(org.broadleafcommerce.security.domain.AdminRole) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testAdminRoleSave(org.broadleafcommerce.security.domain.AdminRole)[pri:0, instance:org.broadleafcommerce.security.test.AdminRoleTest@78b1cc93]" name="testAdminRoleSave" duration-ms="52" started-at="2019-09-04T16:37:19Z" data-provider="setupAdminRole" finished-at="2019-09-04T16:37:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.security.domain.AdminRoleImpl@9d99851]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdminRoleSave -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.security.test.AdminRoleTest@78b1cc93]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:19Z" finished-at="2019-09-04T16:37:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.security.test.AdminRoleTest@78b1cc93]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2019-09-04T16:37:19Z" finished-at="2019-09-04T16:37:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.security.test.AdminRoleTest.testAdminRoleSave(org.broadleafcommerce.security.domain.AdminRole) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.broadleafcommerce.security.test.AdminRoleTest@78b1cc93]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:19Z" finished-at="2019-09-04T16:37:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.security.test.AdminRoleTest@78b1cc93]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:19Z" finished-at="2019-09-04T16:37:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.security.test.AdminRoleTest -->
      <class name="org.broadleafcommerce.profile.test.CustomerAddressTest">
        <test-method status="SKIP" signature="createCustomerAddress(org.broadleafcommerce.profile.domain.CustomerAddress)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerAddressTest@491666ad]" name="createCustomerAddress" duration-ms="0" depends-on-groups="createCountry, readCustomer1" started-at="2019-09-04T16:37:20Z" data-provider="setupCustomerAddress" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerAddress -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerAddressTest@491666ad]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerAddressTest@491666ad]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="readCustomerAddressByUserId()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerAddressTest@491666ad]" name="readCustomerAddressByUserId" duration-ms="0" depends-on-groups="createCustomerAddress" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readCustomerAddressByUserId -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerAddressTest@491666ad]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerAddressTest@491666ad]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.profile.test.CustomerAddressTest -->
      <class name="org.broadleafcommerce.test.integration.OrderDaoTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="createOrder(org.broadleafcommerce.order.domain.Order)[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="createOrder" duration-ms="0" depends-on-groups="createPhone, readCustomer1" started-at="2019-09-04T16:37:20Z" data-provider="basicOrder" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
        <test-method status="SKIP" signature="readOrdersForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="readOrdersForCustomer" duration-ms="0" depends-on-groups="createOrder, readCustomer1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readOrdersForCustomer -->
        <test-method status="SKIP" signature="readOrderById()[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="readOrderById" duration-ms="0" depends-on-groups="createOrder" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readOrderById -->
        <test-method status="SKIP" signature="deleteOrderForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="deleteOrderForCustomer" duration-ms="0" depends-on-groups="createOrder" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteOrderForCustomer -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.OrderDaoTest@7f77e91b]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.broadleafcommerce.test.integration.OrderDaoTest -->
      <class name="org.broadleafcommerce.inventory.test.SkuAvailabilityTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="9" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="createSkuAvailability" duration-ms="2" started-at="2019-09-04T16:37:20Z" data-provider="setupSkuAvailability" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@3c2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSkuAvailability -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="createSkuAvailability" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="setupSkuAvailability" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@3e1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSkuAvailability -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="createSkuAvailability" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="setupSkuAvailability" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@3c3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSkuAvailability -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="createSkuAvailability" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="setupSkuAvailability" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@3e2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSkuAvailability -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="createSkuAvailability" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="setupSkuAvailability" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@3c4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSkuAvailability -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="createSkuAvailability" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="setupSkuAvailability" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@3e3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSkuAvailability -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="createSkuAvailability" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="setupSkuAvailability" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@3c5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSkuAvailability -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="createSkuAvailability" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="setupSkuAvailability" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@3e4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSkuAvailability -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="createSkuAvailability" duration-ms="2" started-at="2019-09-04T16:37:20Z" data-provider="setupSkuAvailability" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@3c6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSkuAvailability -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="createSkuAvailability" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="setupSkuAvailability" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@3e5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSkuAvailability -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="checkAvailableQuantityWithNullQuantityOnHand()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="checkAvailableQuantityWithNullQuantityOnHand" duration-ms="0" depends-on-groups="createSkuAvailability" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAvailableQuantityWithNullQuantityOnHand -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.checkAvailableQuantityWithNullQuantityOnHand()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="checkAvailableQuantityWithNullReserveQty()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="checkAvailableQuantityWithNullReserveQty" duration-ms="1" depends-on-groups="createSkuAvailability" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAvailableQuantityWithNullReserveQty -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.checkAvailableQuantityWithNullReserveQty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="checkAvailableQuantityWithReserveAndQOH()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="checkAvailableQuantityWithReserveAndQOH" duration-ms="0" depends-on-groups="createSkuAvailability" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAvailableQuantityWithReserveAndQOH -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.checkAvailableQuantityWithReserveAndQOH()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="readAvailableSkusForLocation()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="readAvailableSkusForLocation" duration-ms="1" depends-on-groups="createSkuAvailability" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readAvailableSkusForLocation -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.readAvailableSkusForLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="readAvailableSkusForUnknownLocation()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="readAvailableSkusForUnknownLocation" duration-ms="1" depends-on-groups="createSkuAvailability" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readAvailableSkusForUnknownLocation -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.readAvailableSkusForUnknownLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="readSKUAvailabilityEntries()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="readSKUAvailabilityEntries" duration-ms="0" depends-on-groups="createSkuAvailability" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSKUAvailabilityEntries -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.readSKUAvailabilityEntries()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.inventory.test.SkuAvailabilityTest@3c87521]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.broadleafcommerce.inventory.test.SkuAvailabilityTest -->
      <class name="org.broadleafcommerce.pricing.test.PricingTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="12" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.pricing.test.PricingTest.testShippingInsert(org.broadleafcommerce.pricing.domain.ShippingRate,org.broadleafcommerce.pricing.domain.ShippingRate) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testShippingInsert(org.broadleafcommerce.pricing.domain.ShippingRate, org.broadleafcommerce.pricing.domain.ShippingRate)[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="testShippingInsert" duration-ms="4" started-at="2019-09-04T16:37:20Z" data-provider="basicShippingRates" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ALL 8.5 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ALL 8.5 0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShippingInsert -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="12" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.pricing.test.PricingTest.testShippingInsert(org.broadleafcommerce.pricing.domain.ShippingRate,org.broadleafcommerce.pricing.domain.ShippingRate) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testPricing()[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="testPricing" duration-ms="0" depends-on-groups="testShippingInsert" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPricing -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.pricing.test.PricingTest.testPricing() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testShipping()[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="testShipping" duration-ms="1" depends-on-groups="testShippingInsert" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShipping -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.pricing.test.PricingTest.testShipping() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.pricing.test.PricingTest@400cff1a]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.broadleafcommerce.pricing.test.PricingTest -->
      <class name="org.broadleafcommerce.test.integration.SkuDaoTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.SkuDaoTest@55a1c291]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="createSku(org.broadleafcommerce.catalog.domain.Sku)[pri:0, instance:org.broadleafcommerce.test.integration.SkuDaoTest@55a1c291]" name="createSku" duration-ms="0" depends-on-groups="createOrder, createProducts, readCustomer1" started-at="2019-09-04T16:37:20Z" data-provider="basicSku" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSku -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.SkuDaoTest@55a1c291]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="readFirstSku()[pri:0, instance:org.broadleafcommerce.test.integration.SkuDaoTest@55a1c291]" name="readFirstSku" duration-ms="0" depends-on-groups="createSku" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readFirstSku -->
        <test-method status="SKIP" signature="readSkuById()[pri:0, instance:org.broadleafcommerce.test.integration.SkuDaoTest@55a1c291]" name="readSkuById" duration-ms="0" depends-on-groups="createSku" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSkuById -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.SkuDaoTest@55a1c291]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.SkuDaoTest@55a1c291]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.test.integration.SkuDaoTest -->
      <class name="org.broadleafcommerce.test.integration.ProductDaoTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="createProducts(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createProducts" duration-ms="0" started-at="2019-09-04T16:37:20Z" data-provider="setupProducts" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@58243576]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProducts -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.createProducts(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="createProducts(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createProducts" duration-ms="0" started-at="2019-09-04T16:37:20Z" data-provider="setupProducts" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@58243576]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProducts -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.createProducts(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="createProducts(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createProducts" duration-ms="0" started-at="2019-09-04T16:37:20Z" data-provider="setupProducts" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@58243576]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProducts -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.createProducts(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="createProducts(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createProducts" duration-ms="0" started-at="2019-09-04T16:37:20Z" data-provider="setupProducts" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@58243576]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProducts -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.createProducts(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="createProducts(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createProducts" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="setupProducts" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@58243576]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProducts -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.createProducts(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="createProducts(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createProducts" duration-ms="0" started-at="2019-09-04T16:37:20Z" data-provider="setupProducts" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@58243576]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProducts -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.createProducts(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="createProducts(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createProducts" duration-ms="0" started-at="2019-09-04T16:37:20Z" data-provider="setupProducts" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@58243576]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProducts -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.createProducts(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testFeaturedProduct(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="testFeaturedProduct" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="basicProduct" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@6f0ef148]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFeaturedProduct -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.testFeaturedProduct(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.testProductAttributes(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="testProductAttributes(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="testProductAttributes" duration-ms="0" started-at="2019-09-04T16:37:20Z" data-provider="basicProduct" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@6f0ef148]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductAttributes -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="testReadProductsById(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="testReadProductsById" duration-ms="0" started-at="2019-09-04T16:37:20Z" data-provider="basicProduct" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@6f0ef148]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadProductsById -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testReadProductsByName(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="testReadProductsByName" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="basicProduct" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@6f0ef148]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadProductsByName -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.testReadProductsById(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.testReadProductsByName(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="createUpSaleValues(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createUpSaleValues" duration-ms="0" depends-on-groups="createProducts" started-at="2019-09-04T16:37:20Z" data-provider="basicUpSaleValue" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUpSaleValues -->
        <test-method status="SKIP" signature="testReadProductsWithUpSaleValues(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="testReadProductsWithUpSaleValues" duration-ms="0" depends-on-groups="createUpSaleValues" started-at="2019-09-04T16:37:20Z" data-provider="basicUpSaleValue" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadProductsWithUpSaleValues -->
        <test-method status="SKIP" signature="createCrossSaleValues(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="createCrossSaleValues" duration-ms="0" depends-on-groups="testReadProductsWithUpSaleValues" started-at="2019-09-04T16:37:20Z" data-provider="basicCrossSaleValue" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCrossSaleValues -->
        <test-method status="SKIP" signature="testReadProductsWithCrossSaleValues(org.broadleafcommerce.catalog.domain.Product)[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="testReadProductsWithCrossSaleValues" duration-ms="0" depends-on-groups="createCrossSaleValues" started-at="2019-09-04T16:37:20Z" data-provider="basicCrossSaleValue" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadProductsWithCrossSaleValues -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.ProductDaoTest@3b2da18f]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.test.integration.ProductDaoTest -->
      <class name="org.broadleafcommerce.test.integration.OfferServiceTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.OfferServiceTest@52aa2946]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="applyOffersToOrder(java.util.List)[pri:0, instance:org.broadleafcommerce.test.integration.OfferServiceTest@52aa2946]" name="applyOffersToOrder" duration-ms="0" depends-on-groups="findCurrentCartForCustomer, getItemsForOrder" started-at="2019-09-04T16:37:20Z" data-provider="offerDataProvider" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyOffersToOrder -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.OfferServiceTest@52aa2946]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.OfferServiceTest@52aa2946]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.OfferServiceTest@52aa2946]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.test.integration.OfferServiceTest -->
      <class name="org.broadleafcommerce.test.integration.OrderItemDaoTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="createDiscreteOrderItem(org.broadleafcommerce.order.domain.DiscreteOrderItem)[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="createDiscreteOrderItem" duration-ms="0" depends-on-groups="createOrder, createSku" started-at="2019-09-04T16:37:20Z" data-provider="basicDiscreteOrderItem" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDiscreteOrderItem -->
        <test-method status="SKIP" signature="readOrderItemsById()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="readOrderItemsById" duration-ms="0" depends-on-groups="createDiscreteOrderItem" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readOrderItemsById -->
        <test-method status="SKIP" signature="createGiftWrapOrderItem(org.broadleafcommerce.order.domain.GiftWrapOrderItem)[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="createGiftWrapOrderItem" duration-ms="0" depends-on-groups="readOrderItemsById" started-at="2019-09-04T16:37:20Z" data-provider="basicGiftWrapOrderItem" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createGiftWrapOrderItem -->
        <test-method status="SKIP" signature="readGiftWrapOrderItemsById()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="readGiftWrapOrderItemsById" duration-ms="0" depends-on-groups="createGiftWrapOrderItem" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readGiftWrapOrderItemsById -->
        <test-method status="SKIP" signature="deleteGiftWrapOrderItemsById()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="deleteGiftWrapOrderItemsById" duration-ms="0" depends-on-groups="readGiftWrapOrderItemsById" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteGiftWrapOrderItemsById -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="SKIP" signature="readOrderItemsByIdAfterGiftWrapDeletion()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="readOrderItemsByIdAfterGiftWrapDeletion" duration-ms="0" depends-on-groups="deleteGiftWrapOrderItemsById" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readOrderItemsByIdAfterGiftWrapDeletion -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.OrderItemDaoTest@358c99f5]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.broadleafcommerce.test.integration.OrderItemDaoTest -->
      <class name="org.broadleafcommerce.profile.test.AddressTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="8" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.createCountry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createCountry()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="createCountry" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCountry -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="8" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.createCountry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="createState()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="createState" duration-ms="1" depends-on-groups="createCountry" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createState -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.createState()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="findCountries()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="findCountries" duration-ms="1" depends-on-groups="createCountry" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findCountries -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.findCountries()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="findCountryByShortName()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="findCountryByShortName" duration-ms="0" depends-on-groups="findCountries" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findCountryByShortName -->
        <test-method status="SKIP" signature="findStates()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="findStates" duration-ms="0" depends-on-groups="createState" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findStates -->
        <test-method status="SKIP" signature="findStateByAbbreviation()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="findStateByAbbreviation" duration-ms="0" depends-on-groups="findStates" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findStateByAbbreviation -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.AddressTest@3d299e3]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.profile.test.AddressTest -->
      <class name="org.broadleafcommerce.profile.test.IdGenerationTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="createId()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="createId" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createId -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.IdGenerationTest.createId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.IdGenerationTest.createIdForBeginEndSequence()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="createIdForBeginEndSequence()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="createIdForBeginEndSequence" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createIdForBeginEndSequence -->
        <test-method status="SKIP" signature="findIds()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="findIds" duration-ms="0" depends-on-groups="createId" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findIds -->
        <test-method status="SKIP" signature="findIdsForBeginEndSequence()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="findIdsForBeginEndSequence" duration-ms="1" depends-on-groups="createIdForBeginEndSequence" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findIdsForBeginEndSequence -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.IdGenerationTest@50a7bc6e]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.profile.test.IdGenerationTest -->
      <class name="org.broadleafcommerce.test.integration.OrderTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="findCartForNullCustomerId()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findCartForNullCustomerId" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findCartForNullCustomerId -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderTest.findCartForNullCustomerId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="createCartForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="createCartForCustomer" duration-ms="0" depends-on-groups="createPhone, readCustomer1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCartForCustomer -->
        <test-method status="SKIP" signature="findCurrentCartForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findCurrentCartForCustomer" duration-ms="0" depends-on-groups="createPhone, readCustomer1, createCartForCustomer" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findCurrentCartForCustomer -->
        <test-method status="SKIP" signature="getOrdersForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="getOrdersForCustomer" duration-ms="0" depends-on-groups="findCurrentCartForCustomer, readCustomer1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOrdersForCustomer -->
        <test-method status="SKIP" signature="addItemToOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addItemToOrder" duration-ms="0" depends-on-groups="findCurrentCartForCustomer, createSku" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addItemToOrder -->
        <test-method status="SKIP" signature="findCartForAnonymousCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findCartForAnonymousCustomer" duration-ms="0" depends-on-groups="getOrdersForCustomer" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findCartForAnonymousCustomer -->
        <test-method status="SKIP" signature="addAnotherItemToOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addAnotherItemToOrder" duration-ms="0" depends-on-groups="addItemToOrder" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAnotherItemToOrder -->
        <test-method status="SKIP" signature="findOrderByOrderNumber()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findOrderByOrderNumber" duration-ms="0" depends-on-groups="findCartForAnonymousCustomer" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findOrderByOrderNumber -->
        <test-method status="SKIP" signature="addBundleToOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addBundleToOrder" duration-ms="0" depends-on-groups="addAnotherItemToOrder" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBundleToOrder -->
        <test-method status="SKIP" signature="getItemsForOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="getItemsForOrder" duration-ms="1" depends-on-groups="removeBundleFromOrder" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getItemsForOrder -->
        <test-method status="SKIP" signature="findNamedOrderForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findNamedOrderForCustomer" duration-ms="0" depends-on-groups="findOrderByOrderNumber" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findNamedOrderForCustomer -->
        <test-method status="SKIP" signature="removeBundleFromOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="removeBundleFromOrder" duration-ms="0" depends-on-groups="addBundleToOrder" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeBundleFromOrder -->
        <test-method status="SKIP" signature="testReadOrdersForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testReadOrdersForCustomer" duration-ms="0" depends-on-groups="findNamedOrderForCustomer" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOrdersForCustomer -->
        <test-method status="SKIP" signature="testSubmitOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testSubmitOrder" duration-ms="0" depends-on-groups="findNamedOrderForCustomer" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubmitOrder -->
        <test-method status="SKIP" signature="testOrderProperties()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testOrderProperties" duration-ms="0" depends-on-groups="testReadOrdersForCustomer" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderProperties -->
        <test-method status="SKIP" signature="removeItemFromOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="removeItemFromOrder" duration-ms="0" depends-on-groups="getItemsForOrder" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeItemFromOrder -->
        <test-method status="SKIP" signature="updateItemsInOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="updateItemsInOrder" duration-ms="0" depends-on-groups="getItemsForOrder" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateItemsInOrder -->
        <test-method status="SKIP" signature="checkOrderItems()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="checkOrderItems" duration-ms="1" depends-on-groups="removeItemFromOrder" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOrderItems -->
        <test-method status="SKIP" signature="testNamedOrderForCustomer()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testNamedOrderForCustomer" duration-ms="0" depends-on-groups="testOrderProperties" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNamedOrderForCustomer -->
        <test-method status="SKIP" signature="testAddSkuToOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testAddSkuToOrder" duration-ms="1" depends-on-groups="testNamedOrderForCustomer" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddSkuToOrder -->
        <test-method status="SKIP" signature="addPaymentToOrder(org.broadleafcommerce.payment.domain.PaymentInfo)[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addPaymentToOrder" duration-ms="0" depends-on-groups="checkOrderItems" started-at="2019-09-04T16:37:20Z" data-provider="basicPaymentInfo" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPaymentToOrder -->
        <test-method status="SKIP" signature="testOrderPaymentInfos(org.broadleafcommerce.payment.domain.PaymentInfo)[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="testOrderPaymentInfos" duration-ms="0" depends-on-groups="testAddSkuToOrder" started-at="2019-09-04T16:37:20Z" data-provider="basicPaymentInfo" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderPaymentInfos -->
        <test-method status="SKIP" signature="addFulfillmentGroupToOrderFirst(org.broadleafcommerce.order.domain.FulfillmentGroup)[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addFulfillmentGroupToOrderFirst" duration-ms="0" depends-on-groups="addPaymentToOrder" started-at="2019-09-04T16:37:20Z" data-provider="basicFulfillmentGroup" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFulfillmentGroupToOrderFirst -->
        <test-method status="SKIP" signature="addItemToFulfillmentgroupSecond()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="addItemToFulfillmentgroupSecond" duration-ms="0" depends-on-groups="addFulfillmentGroupToOrderFirst" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addItemToFulfillmentgroupSecond -->
        <test-method status="SKIP" signature="findFillmentGroupForOrderFirst()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findFillmentGroupForOrderFirst" duration-ms="0" depends-on-groups="addFulfillmentGroupToOrderFirst" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findFillmentGroupForOrderFirst -->
        <test-method status="SKIP" signature="findDefaultFillmentGroupForOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="findDefaultFillmentGroupForOrder" duration-ms="0" depends-on-groups="addFulfillmentGroupToOrderFirst, findCurrentCartForCustomer" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findDefaultFillmentGroupForOrder -->
        <test-method status="SKIP" signature="removeItemFromOrderAfterFulfillmentGroups()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="removeItemFromOrderAfterFulfillmentGroups" duration-ms="0" depends-on-groups="addFulfillmentGroupToOrderFirst" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeItemFromOrderAfterFulfillmentGroups -->
        <test-method status="SKIP" signature="removeFulfillmentGroupFromOrder()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="removeFulfillmentGroupFromOrder" duration-ms="0" depends-on-groups="addFulfillmentGroupToOrderFirst" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeFulfillmentGroupFromOrder -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.OrderTest@214b199c]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.test.integration.OrderTest -->
      <class name="org.broadleafcommerce.test.integration.ExtensibilityTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.ExtensibilityTest@123f1134]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.ExtensibilityTest@123f1134]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ExtensibilityTest@123f1134]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.test.integration.ExtensibilityTest@123f1134]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="test()[pri:0, instance:org.broadleafcommerce.test.integration.ExtensibilityTest@123f1134]" name="test" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.ExtensibilityTest@123f1134]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.ExtensibilityTest@123f1134]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.test.integration.ExtensibilityTest@123f1134]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ExtensibilityTest.test()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- org.broadleafcommerce.test.integration.ExtensibilityTest -->
      <class name="org.broadleafcommerce.security.test.AdminUserTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.security.test.AdminUserTest@1d548a08]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.security.test.AdminUserTest@1d548a08]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="6" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.security.test.AdminUserTest@1d548a08]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.security.test.AdminUserTest.testAdminUserSave(org.broadleafcommerce.security.domain.AdminUser) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.security.test.AdminUserTest@1d548a08]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testAdminUserSave(org.broadleafcommerce.security.domain.AdminUser)[pri:0, instance:org.broadleafcommerce.security.test.AdminUserTest@1d548a08]" name="testAdminUserSave" duration-ms="7" started-at="2019-09-04T16:37:20Z" data-provider="setupAdminUser" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.security.domain.AdminUserImpl@3dbb3fb7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdminUserSave -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.security.test.AdminUserTest@1d548a08]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.security.test.AdminUserTest.testAdminUserSave(org.broadleafcommerce.security.domain.AdminUser) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.security.test.AdminUserTest@1d548a08]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.broadleafcommerce.security.test.AdminUserTest@1d548a08]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.broadleafcommerce.security.test.AdminUserTest -->
      <class name="org.broadleafcommerce.profile.test.CustomerPhoneControllerTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="createCustomerPhoneFromController(org.broadleafcommerce.profile.web.model.PhoneNameForm)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="createCustomerPhoneFromController" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="setupCustomerPhoneControllerData" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.profile.web.model.PhoneNameForm@67a0ff25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerPhoneFromController -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerPhoneControllerTest.createCustomerPhoneFromController(org.broadleafcommerce.profile.web.model.PhoneNameForm)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="createCustomerPhoneFromController(org.broadleafcommerce.profile.web.model.PhoneNameForm)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="createCustomerPhoneFromController" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="setupCustomerPhoneControllerData" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.profile.web.model.PhoneNameForm@606b53a3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerPhoneFromController -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerPhoneControllerTest.createCustomerPhoneFromController(org.broadleafcommerce.profile.web.model.PhoneNameForm)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="viewCustomerPhoneFromController()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="viewCustomerPhoneFromController" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewCustomerPhoneFromController -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerPhoneControllerTest.viewCustomerPhoneFromController()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="makePhoneDefaultOnCustomerPhoneController()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="makePhoneDefaultOnCustomerPhoneController" duration-ms="0" depends-on-groups="createCustomerPhoneFromController" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makePhoneDefaultOnCustomerPhoneController -->
        <test-method status="SKIP" signature="readCustomerPhoneFromController()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="readCustomerPhoneFromController" duration-ms="0" depends-on-groups="createCustomerPhoneFromController" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readCustomerPhoneFromController -->
        <test-method status="SKIP" signature="viewExistingCustomerPhoneFromController()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="viewExistingCustomerPhoneFromController" duration-ms="0" depends-on-groups="createCustomerPhoneFromController" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewExistingCustomerPhoneFromController -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerPhoneControllerTest@589b3632]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.profile.test.CustomerPhoneControllerTest -->
      <class name="org.broadleafcommerce.profile.test.PhoneTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.PhoneTest@4d826d77]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.profile.test.PhoneTest@4d826d77]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="createPhone(org.broadleafcommerce.profile.domain.Phone)[pri:0, instance:org.broadleafcommerce.profile.test.PhoneTest@4d826d77]" name="createPhone" duration-ms="0" depends-on-groups="readCustomer1" started-at="2019-09-04T16:37:20Z" data-provider="setupPhone" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPhone -->
        <test-method status="SKIP" signature="readPhoneById()[pri:0, instance:org.broadleafcommerce.profile.test.PhoneTest@4d826d77]" name="readPhoneById" duration-ms="0" depends-on-groups="createPhone" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readPhoneById -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.profile.test.PhoneTest@4d826d77]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.PhoneTest@4d826d77]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.profile.test.PhoneTest -->
      <class name="org.broadleafcommerce.profile.test.RegisterCustomerControllerTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="6" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="setupControllerTest()[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="setupControllerTest" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupControllerTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="setup" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.RegisterCustomerControllerTest.createCustomerFromController(org.broadleafcommerce.profile.web.form.RegisterCustomerForm)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createCustomerFromController(org.broadleafcommerce.profile.web.form.RegisterCustomerForm)[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="createCustomerFromController" duration-ms="51" started-at="2019-09-04T16:37:20Z" data-provider="setupCustomerControllerData" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.profile.web.form.RegisterCustomerForm@2086d469]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerFromController -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.RegisterCustomerControllerTest.createCustomerFromController(org.broadleafcommerce.profile.web.form.RegisterCustomerForm)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.RegisterCustomerControllerTest.viewRegisterCustomerFromController()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="viewRegisterCustomerFromController()[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="viewRegisterCustomerFromController" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRegisterCustomerFromController -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.RegisterCustomerControllerTest.viewRegisterCustomerFromController()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="tearDownControllerTest()[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="tearDownControllerTest" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownControllerTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.RegisterCustomerControllerTest@667a738]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.profile.test.RegisterCustomerControllerTest -->
      <class name="org.broadleafcommerce.profile.test.CustomerTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="7" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.createCustomerIdGeneration()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createCustomerIdGeneration()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="createCustomerIdGeneration" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerIdGeneration -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.createCustomerIdGeneration()]]>
              </value>
            </param>
          </params>
          <exception class="org.springframework.dao.DataIntegrityViolationException">
            <message>
              <![CDATA[could not execute statement; SQL [n/a]; constraint [SYS_PK_10387]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [SYS_PK_10387]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:248)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:214)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:519)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:726)
	at org.springframework.test.context.transaction.TransactionContext.endTransaction(TransactionContext.java:127)
	at org.springframework.test.context.transaction.TransactionalTestExecutionListener.afterTestMethod(TransactionalTestExecutionListener.java:223)
	at org.springframework.test.context.TestContextManager.afterTestMethod(TestContextManager.java:297)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextAfterTestMethod(AbstractTestNGSpringContextTests.java:193)
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:786)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:72)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:49)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:126)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:112)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:211)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3124)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3581)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:104)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:463)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:349)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:350)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:56)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1222)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:425)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.beforeTransactionCommit(JdbcTransaction.java:101)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:177)
	at org.hibernate.jpa.internal.TransactionImpl.commit(TransactionImpl.java:77)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:515)
	... 31 more
Caused by: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10387 table: BLC_ID_GENERATION
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:102)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:208)
	... 45 more
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10387 table: BLC_ID_GENERATION
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVLMemory.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 49 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.dao.DataIntegrityViolationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.createCustomer(org.broadleafcommerce.profile.domain.Customer)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="createCustomer(org.broadleafcommerce.profile.domain.Customer)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="createCustomer" duration-ms="0" depends-on-groups="createCustomerIdGeneration" started-at="2019-09-04T16:37:20Z" data-provider="setupCustomers" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.profile.domain.CustomerImpl@600e7c32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomer -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="createCustomer(org.broadleafcommerce.profile.domain.Customer)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="createCustomer" duration-ms="1" depends-on-groups="createCustomerIdGeneration" started-at="2019-09-04T16:37:20Z" data-provider="setupCustomers" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.profile.domain.CustomerImpl@600e7c33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomer -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.createCustomer(org.broadleafcommerce.profile.domain.Customer)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="readCustomersByUsername1()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="readCustomersByUsername1" duration-ms="1" depends-on-groups="createCustomers" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readCustomersByUsername1 -->
        <test-method status="SKIP" signature="readCustomersById()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="readCustomersById" duration-ms="0" depends-on-groups="createCustomers" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readCustomersById -->
        <test-method status="SKIP" signature="changeCustomerPasswords()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="changeCustomerPasswords" duration-ms="0" depends-on-groups="readCustomer1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeCustomerPasswords -->
        <test-method status="SKIP" signature="readCustomersByUsername2()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="readCustomersByUsername2" duration-ms="0" depends-on-groups="changeCustomerPassword" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readCustomersByUsername2 -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.profile.test.CustomerTest@145eaa29]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.profile.test.CustomerTest -->
      <class name="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="createDefaultFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="createDefaultFulfillmentGroup" duration-ms="0" depends-on-groups="createOrder, createCustomerAddress" started-at="2019-09-04T16:37:20Z" data-provider="basicFulfillmentGroup" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDefaultFulfillmentGroup -->
        <test-method status="SKIP" signature="createFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="createFulfillmentGroup" duration-ms="1" depends-on-groups="createOrder, createCustomerAddress" started-at="2019-09-04T16:37:20Z" data-provider="basicFulfillmentGroup" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createFulfillmentGroup -->
        <test-method status="SKIP" signature="readDefaultFulfillmentGroupForId()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="readDefaultFulfillmentGroupForId" duration-ms="0" depends-on-groups="createDefaultFulfillmentGroup" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefaultFulfillmentGroupForId -->
        <test-method status="SKIP" signature="readFulfillmentGroupsForId()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="readFulfillmentGroupsForId" duration-ms="0" depends-on-groups="createFulfillmentGroup" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readFulfillmentGroupsForId -->
        <test-method status="SKIP" signature="readDefaultFulfillmentGroupForOrder()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="readDefaultFulfillmentGroupForOrder" duration-ms="0" depends-on-groups="createDefaultFulfillmentGroup" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readDefaultFulfillmentGroupForOrder -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest@1b083826]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest -->
      <class name="org.broadleafcommerce.test.integration.PaymentInfoServiceTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="createPaymentInfo(org.broadleafcommerce.payment.domain.PaymentInfo)[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="createPaymentInfo" duration-ms="0" depends-on-groups="createOrder, readCustomer1" started-at="2019-09-04T16:37:20Z" data-provider="basicPaymentInfo" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPaymentInfo -->
        <test-method status="SKIP" signature="createTestPaymentInfo()[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="createTestPaymentInfo" duration-ms="0" depends-on-groups="createPaymentInfo" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestPaymentInfo -->
        <test-method status="SKIP" signature="readPaymentInfoById()[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="readPaymentInfoById" duration-ms="0" depends-on-groups="createPaymentInfo" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readPaymentInfoById -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="readPaymentInfoByOrder()[pri:0, instance:org.broadleafcommerce.test.integration.PaymentInfoServiceTest@6295d394]" name="readPaymentInfoByOrder" duration-ms="0" depends-on-groups="createPaymentInfo" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readPaymentInfoByOrder -->
      </class> <!-- org.broadleafcommerce.test.integration.PaymentInfoServiceTest -->
      <class name="org.broadleafcommerce.security.test.AdminPermissionTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.security.test.AdminPermissionTest@1a84f40f]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.security.test.AdminPermissionTest@1a84f40f]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.security.test.AdminPermissionTest@1a84f40f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.security.test.AdminPermissionTest.testAdminPermissionSave(org.broadleafcommerce.security.domain.AdminPermission) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testAdminPermissionSave(org.broadleafcommerce.security.domain.AdminPermission)[pri:0, instance:org.broadleafcommerce.security.test.AdminPermissionTest@1a84f40f]" name="testAdminPermissionSave" duration-ms="6" started-at="2019-09-04T16:37:20Z" data-provider="setupAdminPermission" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.security.domain.AdminPermissionImpl@7ba06506]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdminPermissionSave -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.security.test.AdminPermissionTest@1a84f40f]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.security.test.AdminPermissionTest@1a84f40f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.security.test.AdminPermissionTest.testAdminPermissionSave(org.broadleafcommerce.security.domain.AdminPermission) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.broadleafcommerce.security.test.AdminPermissionTest@1a84f40f]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.security.test.AdminPermissionTest@1a84f40f]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.security.test.AdminPermissionTest -->
      <class name="org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest@25a65b77]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest@25a65b77]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="createFulfillmentGroupItem()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest@25a65b77]" name="createFulfillmentGroupItem" duration-ms="0" depends-on-groups="createOrder, createDiscreteOrderItem" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createFulfillmentGroupItem -->
        <test-method status="SKIP" signature="readFulfillmentGroupItemsForFulfillmentGroup()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest@25a65b77]" name="readFulfillmentGroupItemsForFulfillmentGroup" duration-ms="1" depends-on-groups="createFulfillmentGroupItem" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readFulfillmentGroupItemsForFulfillmentGroup -->
        <test-method status="SKIP" signature="readFulfillmentGroupItemsById()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest@25a65b77]" name="readFulfillmentGroupItemsById" duration-ms="0" depends-on-groups="createFulfillmentGroupItem" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readFulfillmentGroupItemsById -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest@25a65b77]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest@25a65b77]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest -->
      <class name="org.broadleafcommerce.email.test.EmailTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.email.test.EmailTest@4c40b76e]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.email.test.EmailTest@4c40b76e]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="6" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="setupEmailTest()[pri:0, instance:org.broadleafcommerce.email.test.EmailTest@4c40b76e]" name="setupEmailTest" is-config="true" duration-ms="13" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupEmailTest -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.email.test.EmailTest@4c40b76e]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.email.test.EmailTest.testSynchronousEmail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.email.test.EmailTest@4c40b76e]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testSynchronousEmail()[pri:0, instance:org.broadleafcommerce.email.test.EmailTest@4c40b76e]" name="testSynchronousEmail" duration-ms="94" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSynchronousEmail -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.email.test.EmailTest@4c40b76e]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.email.test.EmailTest.testSynchronousEmail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="tearDownEmailTest()[pri:0, instance:org.broadleafcommerce.email.test.EmailTest@4c40b76e]" name="tearDownEmailTest" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownEmailTest -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.email.test.EmailTest@4c40b76e]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.broadleafcommerce.email.test.EmailTest@4c40b76e]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.broadleafcommerce.email.test.EmailTest -->
    </test> <!-- commerce-integrationtest -->
    <test name="offer-integrationtest" duration-ms="1431" started-at="2019-09-04T21:37:20Z" finished-at="2019-09-04T21:37:22Z">
      <class name="org.broadleafcommerce.offer.test.OfferTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="22" started-at="2019-09-04T16:37:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="3" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.createSku1(org.broadleafcommerce.catalog.domain.Sku)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createSku1(org.broadleafcommerce.catalog.domain.Sku)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="createSku1" duration-ms="1" started-at="2019-09-04T16:37:20Z" data-provider="basicSku" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.SkuImpl@6924dfe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSku1 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="8" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.createSku1(org.broadleafcommerce.catalog.domain.Sku)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.createSku2(org.broadleafcommerce.catalog.domain.Sku)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createSku2(org.broadleafcommerce.catalog.domain.Sku)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="createSku2" duration-ms="0" started-at="2019-09-04T16:37:20Z" data-provider="basicSku" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.SkuImpl@6924dff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSku2 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="5" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.createSku2(org.broadleafcommerce.catalog.domain.Sku)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferUsedForPricing() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testOfferUsedForPricing()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferUsedForPricing" duration-ms="274" depends-on-groups="offerCreateSku2, offerCreateSku1" started-at="2019-09-04T16:37:20Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferUsedForPricing -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="17" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferUsedForPricing() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testPercentOffOfferWithScaleGreaterThanTwo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testPercentOffOfferWithScaleGreaterThanTwo()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testPercentOffOfferWithScaleGreaterThanTwo" duration-ms="42" depends-on-groups="offerCreateSku2, offerCreateSku1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentOffOfferWithScaleGreaterThanTwo -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="15" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testPercentOffOfferWithScaleGreaterThanTwo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferNotStackableItemOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testOfferNotStackableItemOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferNotStackableItemOffers" duration-ms="38" depends-on-groups="offerUsedForPricing" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferNotStackableItemOffers -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="14" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferNotStackableItemOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferNotCombinableItemOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testOfferNotCombinableItemOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferNotCombinableItemOffers" duration-ms="34" depends-on-groups="testOfferNotStackableItemOffers" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferNotCombinableItemOffers -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="13" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferNotCombinableItemOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferLowerSalePrice() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testOfferLowerSalePrice()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferLowerSalePrice" duration-ms="34" depends-on-groups="testOfferNotCombinableItemOffers" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferLowerSalePrice -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="12" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferLowerSalePrice() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferLowerSalePriceWithNotCombinableOffer() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testOfferLowerSalePriceWithNotCombinableOffer()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferLowerSalePriceWithNotCombinableOffer" duration-ms="31" depends-on-groups="testOfferLowerSalePrice" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferLowerSalePriceWithNotCombinableOffer -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="10" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferLowerSalePriceWithNotCombinableOffer() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testOfferLowerSalePriceWithNotCombinableOffer2()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferLowerSalePriceWithNotCombinableOffer2" duration-ms="25" depends-on-groups="testOfferLowerSalePriceWithNotCombinableOffer" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferLowerSalePriceWithNotCombinableOffer2 -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferLowerSalePriceWithNotCombinableOffer2() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="9" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferLowerSalePriceWithNotCombinableOffer2() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testOfferLowerSalePriceWithNotCombinableOfferAndInformation()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferLowerSalePriceWithNotCombinableOfferAndInformation" duration-ms="39" depends-on-groups="testOfferLowerSalePriceWithNotCombinableOffer" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferLowerSalePriceWithNotCombinableOfferAndInformation -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferLowerSalePriceWithNotCombinableOfferAndInformation() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="9" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferLowerSalePriceWithNotCombinableOfferAndInformation() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrderWithAllCombinableOffers_Order_Item_Fulfillment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testOrderWithAllCombinableOffers_Order_Item_Fulfillment()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrderWithAllCombinableOffers_Order_Item_Fulfillment" duration-ms="56" depends-on-groups="testOfferLowerSalePriceWithNotCombinableOffer" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderWithAllCombinableOffers_Order_Item_Fulfillment -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="10" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrderWithAllCombinableOffers_Order_Item_Fulfillment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrderWithCombinable_ItemAndShipping_NonCombinable_Order_Apply_Percent() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testOrderWithCombinable_ItemAndShipping_NonCombinable_Order_Apply_Percent()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrderWithCombinable_ItemAndShipping_NonCombinable_Order_Apply_Percent" duration-ms="44" depends-on-groups="testOfferLowerSalePriceWithNotCombinableOffer" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderWithCombinable_ItemAndShipping_NonCombinable_Order_Apply_Percent -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="11" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrderWithCombinable_ItemAndShipping_NonCombinable_Order_Apply_Percent() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrderWith_NoOrderItemOffers_WithFulfillmentOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testOrderWith_NoOrderItemOffers_WithFulfillmentOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrderWith_NoOrderItemOffers_WithFulfillmentOffers" duration-ms="31" depends-on-groups="testOfferLowerSalePriceWithNotCombinableOffer" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderWith_NoOrderItemOffers_WithFulfillmentOffers -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="8" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrderWith_NoOrderItemOffers_WithFulfillmentOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrder_ApplyFulfillmentOffer_KeepRetailOrder() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testOrder_ApplyFulfillmentOffer_KeepRetailOrder()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrder_ApplyFulfillmentOffer_KeepRetailOrder" duration-ms="31" depends-on-groups="testOfferLowerSalePriceWithNotCombinableOffer" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrder_ApplyFulfillmentOffer_KeepRetailOrder -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="13" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrder_ApplyFulfillmentOffer_KeepRetailOrder() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrder_ApplyOrderAndItemOffer_KeepRetailShipping() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testOrder_ApplyOrderAndItemOffer_KeepRetailShipping()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrder_ApplyOrderAndItemOffer_KeepRetailShipping" duration-ms="37" depends-on-groups="testOfferLowerSalePriceWithNotCombinableOffer" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrder_ApplyOrderAndItemOffer_KeepRetailShipping -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="9" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrder_ApplyOrderAndItemOffer_KeepRetailShipping() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrder_ApplyOrderOffer_KeepRetailShipping() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testOrder_ApplyOrderOffer_KeepRetailShipping()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrder_ApplyOrderOffer_KeepRetailShipping" duration-ms="27" depends-on-groups="testOfferLowerSalePriceWithNotCombinableOffer" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrder_ApplyOrderOffer_KeepRetailShipping -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="7" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrder_ApplyOrderOffer_KeepRetailShipping() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrder_KeepRetailOrderAndItem_ApplyShippingOffer() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testOrder_KeepRetailOrderAndItem_ApplyShippingOffer()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOrder_KeepRetailOrderAndItem_ApplyShippingOffer" duration-ms="29" depends-on-groups="testOfferLowerSalePriceWithNotCombinableOffer" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrder_KeepRetailOrderAndItem_ApplyShippingOffer -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="11" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOrder_KeepRetailOrderAndItem_ApplyShippingOffer() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testOfferNotStackableOrderOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferNotStackableOrderOffers" duration-ms="29" depends-on-groups="testOfferLowerSalePriceWithNotCombinableOffer2" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferNotStackableOrderOffers -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferNotStackableOrderOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="9" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferNotStackableOrderOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferNotCombinableOrderOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testOfferNotCombinableOrderOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferNotCombinableOrderOffers" duration-ms="18" depends-on-groups="testOfferNotStackableOrderOffers" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferNotCombinableOrderOffers -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="11" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferNotCombinableOrderOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferNotCombinableOrderOffersWithItemOffer() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testOfferNotCombinableOrderOffersWithItemOffer()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferNotCombinableOrderOffersWithItemOffer" duration-ms="22" depends-on-groups="testOfferNotCombinableOrderOffers" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferNotCombinableOrderOffersWithItemOffer -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="9" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferNotCombinableOrderOffersWithItemOffer() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferGreaterDiscountSort() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testOfferGreaterDiscountSort()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferGreaterDiscountSort" duration-ms="20" depends-on-groups="testOfferNotCombinableOrderOffersWithItemOffer" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferGreaterDiscountSort -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="7" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferGreaterDiscountSort() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testOfferSortWhenOfferAppliedToMultipleQuantityItems()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferSortWhenOfferAppliedToMultipleQuantityItems" duration-ms="20" depends-on-groups="testOfferGreaterDiscountSort" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferSortWhenOfferAppliedToMultipleQuantityItems -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferSortWhenOfferAppliedToMultipleQuantityItems() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="9" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferSortWhenOfferAppliedToMultipleQuantityItems() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferSortWhenOfferAppliedToMultipleItems() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testOfferSortWhenOfferAppliedToMultipleItems()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferSortWhenOfferAppliedToMultipleItems" duration-ms="19" depends-on-groups="testOfferSortWhenOfferAppliedToMultipleQuantityItems" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferSortWhenOfferAppliedToMultipleItems -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="8" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferSortWhenOfferAppliedToMultipleItems() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGlobalOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testGlobalOffers" duration-ms="19" depends-on-groups="testOfferSortWhenOfferAppliedToMultipleItems" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGlobalOffers -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testGlobalOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="8" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testGlobalOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testCustomerAssociatedOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCustomerAssociatedOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testCustomerAssociatedOffers" duration-ms="19" depends-on-groups="testGlobalOffers" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCustomerAssociatedOffers -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="8" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testCustomerAssociatedOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testCustomerAssociatedOffers2() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCustomerAssociatedOffers2()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testCustomerAssociatedOffers2" duration-ms="21" depends-on-groups="testCustomerAssociatedOffers" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCustomerAssociatedOffers2 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:21Z" finished-at="2019-09-04T16:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="9" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testCustomerAssociatedOffers2() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testFulfillmentGroupOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testFulfillmentGroupOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testFulfillmentGroupOffers" duration-ms="22" depends-on-groups="testCustomerAssociatedOffers2" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFulfillmentGroupOffers -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="8" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testFulfillmentGroupOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testFulfillmentGroupOffersNonCombinable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testFulfillmentGroupOffersNonCombinable()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testFulfillmentGroupOffersNonCombinable" duration-ms="16" depends-on-groups="testCustomerAssociatedOffers2" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFulfillmentGroupOffersNonCombinable -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="7" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testFulfillmentGroupOffersNonCombinable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testFulfillmentGroupOffers_MultipleNonCombinable()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testFulfillmentGroupOffers_MultipleNonCombinable" duration-ms="22" depends-on-groups="testCustomerAssociatedOffers2" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFulfillmentGroupOffers_MultipleNonCombinable -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testFulfillmentGroupOffers_MultipleNonCombinable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="7" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testFulfillmentGroupOffers_MultipleNonCombinable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testFulfillmentGroupOffers_MultipleNonCombinable_ApplyNonCombinable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testFulfillmentGroupOffers_MultipleNonCombinable_ApplyNonCombinable()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testFulfillmentGroupOffers_MultipleNonCombinable_ApplyNonCombinable" duration-ms="19" depends-on-groups="testCustomerAssociatedOffers2" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFulfillmentGroupOffers_MultipleNonCombinable_ApplyNonCombinable -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="7" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testFulfillmentGroupOffers_MultipleNonCombinable_ApplyNonCombinable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testOfferDelete()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferDelete" duration-ms="10" depends-on-groups="testFulfillmentGroupOffers" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferDelete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testReadAllOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testReadAllOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testReadAllOffers" duration-ms="4" depends-on-groups="testOfferDelete" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadAllOffers -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testReadAllOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testOfferCodeDao()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testOfferCodeDao" duration-ms="4" depends-on-groups="testReadAllOffers" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferCodeDao -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferCodeDao() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testOfferCodeDao() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testCustomerOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testCustomerOffers()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="testCustomerOffers" duration-ms="2" depends-on-groups="testOfferCodeDao" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCustomerOffers -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.offer.test.OfferTest.testCustomerOffers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.broadleafcommerce.offer.test.OfferTest@7995092a]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.broadleafcommerce.offer.test.OfferTest -->
    </test> <!-- offer-integrationtest -->
    <test name="broadleafcommerce-unittest" duration-ms="1" started-at="2019-09-04T21:37:22Z" finished-at="2019-09-04T21:37:22Z">
    </test> <!-- broadleafcommerce-unittest -->
    <test name="broadleafcommerce-layout" duration-ms="21" started-at="2019-09-04T21:37:22Z" finished-at="2019-09-04T21:37:22Z">
      <class name="org.broadleafcommerce.layout.test.PaginationCommandObjectTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="10" started-at="2019-09-04T16:37:22Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testDisplayList()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testDisplayList()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="testDisplayList" duration-ms="2" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisplayList -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testDisplayList()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testFullList()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testFullList()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="testFullList" duration-ms="1" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullList -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testFullList()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testIndices()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testIndices()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="testIndices" duration-ms="1" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndices -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testIndices()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.broadleafcommerce.layout.test.PaginationCommandObjectTest@60dcc9fe]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2019-09-04T16:37:22Z" finished-at="2019-09-04T16:37:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.broadleafcommerce.layout.test.PaginationCommandObjectTest -->
    </test> <!-- broadleafcommerce-layout -->
  </suite> <!-- BroadleafCommerce Test Suite -->
</testng-results>
